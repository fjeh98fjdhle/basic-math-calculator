#entfernen von f(x) = 
def cleaning_fx():
    Funktion_f = input("Geben sie bitte die vollständige Funktion an.")
    Funktion_f = list(Funktion_f)
    for w in Funktion_f:
        if w == "=": 
            equal_index = Funktion_f.index("=") + 1
            Funktion_f = Funktion_f[equal_index:] 
        else:
            Funktion_f = Funktion_f
    #rekonstruieren der Funktion
    eq_store = '' # equation-storing
    for w in Funktion_f: 
        eq_store += w #now the equation is rewritten as a string. 
    return (eq_store)

def adding_num():
    count_iteration = 0
    num_iterations = 0
    num_store = restoring_func()
    for w in num_store:
        num_iterations += 1

    #goes through the elements in the list and eliminates unnecessary 

    #for x in range(num_iterations)
    zusammenfügen = []
    for a in num_store: 
        count_iteration += 1
        for x in range(5):
            if a != 1 or 2 or 3 or 4 or 5 or 6 or 7 or 8 or 9 or 0: 
                not_number = a
                num_store.append(not_number)
            elif a == 1 or 2 or 3 or 4 or 5 or 6 or 7 or 8 or 9 or 0: 
                for a in num_store[num_store.index(a) + x] == 1 or 2 or 3 or 4 or 5 or 6 or 7 or 8 or 9 or 0: 
                    a = a
                    zusammenfügen.append(a)                
                    if a != 1 or 2 or 3 or 4 or 5 or 6 or 7 or 8 or 9 or 0:
                        break

        
                
            
            


def restoring_func():

    eq_store = cleaning_fx()
    
    # restoring in a list with correct dtype.
    num_store = []
    for w in eq_store: 
        if w == "*": 
            num_store.append(w) 
        elif w == "x": 
            num_store.append("x") 
        elif w == "+":
            num_store.append("+")
        elif w == "-":
            num_store.append("-")
        elif w == " ": 
            w = w 
        elif w == 1 or 2 or 3 or 4 or 5 or 6 or 7 or 8 or 9 or 10 or 11 or 12 or 13 or 14: 
            num_store.append(float(w))
        else: 
            print("this is a mistake")
    
    return num_store

def adding_x():
    
    num_store = restoring_func()

    # Punkt x
    print("Geben sie den Punkt an")
    x = float(input('x-wert: '))

    #x-wert eingesetzt in Liste
    x_index = num_store.index("x")
    num_store.insert(x_index, x)
    num_store.remove("x")

    return num_store








def txt_to_func(): 
    return adding_x()

def txt_to_func(): 
    return adding_x()
